{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/Services/Auth.service.ts","./src/Services/UserService.service.ts","./src/Services/alertify.service.ts","./src/Services/error.Interceptor.ts","./src/app/Home/Home.component.ts","./src/app/Home/Home.component.html","./src/app/Members/member-edit/member-edit.component.ts","./src/app/Members/member-edit/member-edit.component.html","./src/app/Members/member-list/member-card/member-card.component.ts","./src/app/Members/member-list/member-card/member-card.component.html","./src/app/Members/member-list/member-list.component.ts","./src/app/Members/member-list/member-list.component.html","./src/app/Members/member-messages/member-message.component.ts","./src/app/Members/member-messages/member-message.component.html","./src/app/Members/memberdetail/memberdetail.component.ts","./src/app/Members/memberdetail/memberdetail.component.html","./src/app/Members/photo-editor/photo-editor.component.ts","./src/app/Members/photo-editor/photo-editor.component.html","./src/app/Register/UserRegister/UserRegister.component.ts","./src/app/Register/UserRegister/UserRegister.component.html","./src/app/Route.ts","./src/app/Values/Values.component.ts","./src/app/Values/Values.component.html","./src/app/_guard/auth.guard.ts","./src/app/_guard/prevent-unsaved-changes-guard.ts","./src/app/_models/Pagination.ts","./src/app/_resolvers/list-resolver.ts","./src/app/_resolvers/member-detail-resolver.ts","./src/app/_resolvers/member-edit-resolver.ts","./src/app/_resolvers/member-list-resolver.ts","./src/app/_resolvers/messages.resolver.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService} from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/_models/User';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n UserName: any;\n CurrentUser: User;\n photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n currentPhotoUrl = this.photoUrl.asObservable();\n \n jwtHelper = new JwtHelperService();\n\nprivate baseUrl = environment.ApiURL + 'auth/';\n\nconstructor(private client: HttpClient){\n}\n\nchangeMemberPhoto(photoUrl: string) {\n  this.photoUrl.next(photoUrl);\n}\n\nlogin(model: any){\n\n  return this.client.post(this.baseUrl + 'login', model).pipe(\n    map( (response: any) => {\n       const user = response;\n       console.log();\n       if (user) {\n        this.storeUserDetail_In_localStorage(user);\n        this.changeMemberPhoto(this.CurrentUser.photoURL);\n       }\n    })\n  );\n}\n\nstoreUserDetail_In_localStorage(current: any): void {\n\n  localStorage.setItem('token', current.token);\n  localStorage.setItem('user', JSON.stringify(current.user));\n  this.UserName = this.jwtHelper.decodeToken(current.token);\n  this.CurrentUser = current.user;\n\n}\n\nRegister(model : User){\n  return this.client.post(this.baseUrl+'Register', model);\n}\n\nloggedIn() {\n  var token = localStorage.getItem('token');\n   return !this.jwtHelper.isTokenExpired(token);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/_models/User';\nimport { PaginationResult } from 'src/app/_models/Pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from 'src/app/_models/Message';\n\n// const httpOptions = {\n//  headers : new HttpHeaders({\n//    'Authorization': 'Bearer ' + localStorage.getItem('token')\n//  })\n// };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n\n  baseUrl = environment.ApiURL;\n\nconstructor(private http: HttpClient) { }\n\ngetUsers(page?, itemPerPage?, userParams?, likesParam?): Observable<PaginationResult<User[]>>{\n\n  const paginatedResult: PaginationResult<User[]> = new PaginationResult<User[]>();\n\n  let params = new HttpParams();\n \n  if(page != null && itemPerPage != null){\n    params = params.append('pageNumber', page);\n    params = params.append('pageSize', itemPerPage);\n  }\n\n  if(userParams != null)\n  {\n    params = params.append('minAge', userParams.minAge);\n    params = params.append('maxAge', userParams.maxAge);\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n  }\n\n  console.log('Test likesParam', likesParam);\n\n  if(likesParam === 'Likers')\n  {\n    params = params.append('Likers', 'true');\n  }\n\n  if(likesParam === 'Likees')\n  {\n    params = params.append('Likees', 'true');\n  }\n\n  return this.http.get<User[]>(this.baseUrl + 'Users/GetUsers', {observe: 'response', params})\n    .pipe( map( res => {\n      paginatedResult.result = res.body;\n      if(res.headers.get('Pagination') != null) {\n        console.log('inside pagination');\n        paginatedResult.pagination = JSON.parse(res.headers.get('Pagination'))\n        console.log('inside after pagination', paginatedResult.pagination);\n      }\n      console.log('fnsh  paginatedResult', paginatedResult);\n      return paginatedResult;\n    })\n  );\n}\n\nupdateUser(id: number, user: User){\n\n  return this.http.put<User>(this.baseUrl + 'Users/updateUser?id=' + id, user);\n}\n\n\ngetUser(id): Observable<User>{\n\n  return this.http.get<User>(this.baseUrl + 'Users/getUserbyID/' + id);\n}\n\nDeletePhoto(userId: number, id: number)\n{\n return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id );\n}\n\nsetMainPhoto(userId: number, id: number) \n{\n  return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain',{});\n}\n\nsendLike(id: number, recipentId: number) \n{\n  return this.http.post(this.baseUrl + 'users/LikeUser/' + id + '/like/' + recipentId,{});\n}\n\ngetMessage(id: number, page?, itemPerPage?, messageContainer?)\n{\n  console.log('user service msg st');\n  const paginatedResult: PaginationResult<Message[]> = new PaginationResult<Message[]>();\n\n  let params = new HttpParams();\n\n  params = params.append('messageContainer', messageContainer);\n\n  if(page != null && itemPerPage != null){\n    params = params.append('pageNumber', page);\n    params = params.append('pageSize', itemPerPage);\n  }\n\n  return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/message',{ observe:'response' , params })\n   .pipe( map( res => {\n     paginatedResult.result = res.body;\n\n     if(res.headers.get('Pagination') != null){\n      paginatedResult.pagination = JSON.parse(res.headers.get('Pagination'));\n      console.log('user service msg result' , paginatedResult.pagination);\n     }\n     return paginatedResult;\n   })\n   );\n}\n\ngetMessageThread(id: number,recipientId: number){\n\n  return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/Message/threads/' + recipientId);\n}\n\nsendMessage(id: number, message: Message){\n  return this.http.post(this.baseUrl + 'users/' + id + '/Message', message);\n}\n\ndeleteMessage(id: number, userId: number){\n  return this.http.post(this.baseUrl + 'users/' + userId + '/Message/' + id,{});\n\n}\n\nMarkMessageAsRead(userId: number, messageId: number){\n  return this.http.post(this.baseUrl + 'users/' + userId + '/Message/' + messageId + '/read',{})\n  .subscribe();\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\nconfirm(message: string, okCallback: () => any){\n  alertify.confirm(message,(e: any) => {\n  if (e) {\n    okCallback();\n  }\n  });\n}\n\nsuccess(message: string){\n  alertify.success(message);\n}\n\nerror(message: string){\n  alertify.error(message);\n}\n\nwarning(message: string){\n  alertify.warning(message);\n}\n\nmessage(message: string){\n  alertify.message(message);\n}\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler):\r\n    import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n        console.log('Inter');\r\n\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n\r\n                if (error.status === 401){\r\n                    return throwError(error.statusText);\r\n                }\r\n\r\n                if (error instanceof HttpResponse){\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if (applicationError) {\r\n                      return throwError(applicationError);\r\n                    }\r\n                }\r\n\r\n                const serverError = error.error;\r\n                let modelStateError = '';\r\n\r\n                if (serverError.errors && typeof serverError.errors === 'object'){\r\n                    for (const key in serverError.errors) {\r\n                        if (serverError.errors[key]) {\r\n                         modelStateError += serverError.errors[key] + '\\n';\r\n                        }\r\n                    }\r\n                }\r\n                return throwError(modelStateError ||  serverError || 'Server Error');\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n","import { Component, OnInit, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-Home',\n  templateUrl: './Home.component.html',\n  styleUrls: ['./Home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  RegisterMode = false;\n  values: any;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    console.log('home');\n    this.getclientRequest();\n  }\n\n  getclientRequest(){\n    this.http.get('http://localhost:5000/api/Values/GetTest').subscribe(res => {\n      this.values = res;\n      console.log(this.values);\n\n    }, err => {\n      console.log(err);\n    });\n  }\n  Register(){\n    this.RegisterMode = true;\n  }\n\n  RegisterCancel(value: boolean){\n    this.RegisterMode = value;\n  }\n\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!RegisterMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches.. All you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"Register()\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div  *ngIf=\"RegisterMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">        \n        <app-UserRegister  (CancelRegister)=\"RegisterCancel($event)\"></app-UserRegister>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/_models/User';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AuthServiceService } from 'src/Services/Auth.service';\n\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n\n  @ViewChild('editform') editForm: NgForm;\n\n  photoUrl: string;\n\n  @HostListener('window:beforeunload', ['$event'])\n\n  unloadNotification($event: any) {\n    if(this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  user: User;\n\n  constructor(private route: ActivatedRoute, private alert: AlertifyService,\n    private servive: UserServiceService, private authServie: AuthServiceService ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe( data => {\n      this.user = data['user'];\n    });\n    \n    this.authServie.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n\n  updateUser()\n  {\n    this.servive.updateUser(this.authServie.UserName.nameid, this.user).subscribe(\n      next => {\n        this.alert.success('successfully saved');\n        this.editForm.reset(this.user);\n      }, err => {\n        console.log(this.user);\n        this.alert.error(err);\n      }\n    );\n  }\n\n  updateMain(Url){\n    console.log(Url);\n   this.user.photoURL= Url;\n  }\n}\n","<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <h3>your profile</h3>\n        </div>\n        <div class=\"col-sm-8\">\n            <div *ngIf=\"editform.dirty\" class=\"alert alert-info\">\n            <strong>Information </strong> you have made changes.. Any unsaved changes will be lost.!\n            </div>\n        </div>        \n    </div>\n    <div class=\"row\">\n  <div class=\"col-sm-4\">\n     <div class=\"card\">\n       <img class=\"card-img-top img-thumbnail\" src=\"{{ photoUrl || '../../../../../assets/user.png'}}\" alt=\"{{ user?.knownAs }}\">\n        <div class=\"card-body\">\n            <div>\n              <strong>Location:</strong>\n              <p>{{user.city}} , {{user.country}}</p>\n            </div>\n            <div>\n              <strong>Age:</strong>\n              <p>{{ user.age}}</p>\n            </div>\n            <div>\n              <strong>Last Active:</strong>\n              <p>{{ user.lastActive }}</p>\n            </div>\n            <div>\n              <strong>Member since:</strong>\n              <p>{{ user.createed }}</p>\n            </div>\n        </div>   \n        <div class=\"card-footer\">           \n              <button [disabled]=\"!editform.dirty\"  form=\"editform\" class=\"btn btn-success btn-block\">Save changes</button>          \n        </div> \n     </div>\n  </div>\n  <div class=\"col-sm-8\">\n     <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\">\n            <tab heading=\"Edit profile\">\n             <form #editform=\"ngForm\" id=\"editform\" (ngSubmit)=\"updateUser();\">\n               <h4>Description</h4>\n            <textarea name=\"introduction\" rows=\"5\" class=\"form-control\" \n            [(ngModel)]=\"user.introduction\"></textarea>       \n      \n               <h4>Looking For</h4>\n               <textarea name=\"lookingFor\" rows=\"5\" class=\"form-control\" \n            [(ngModel)]=\"user.lookingFor\"></textarea>  \n      \n            <h4>Interest</h4>\n               <textarea name=\"interest\" rows=\"5\" class=\"form-control\" \n            [(ngModel)]=\"user.interest\"></textarea>  \n      \n            <h4>Location Details:</h4>\n            <div class=\"form-inline\">\n               <label for=\"city\">city</label>\n               <input class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"user.city\">\n      \n               <label for=\"country\">country</label>\n               <input class=\"form-control\" type=\"text\" name=\"country\" [(ngModel)]=\"user.country\">\n            </div>\n             </form>\n            </tab>\n            <tab heading=\"Edit Photos\">\n              <app-photo-editor [photos]=\"user.photos\"></app-photo-editor>    \n              <!--  -->\n              <!-- (getMainPhotoChange)=\"updateMain($event) -->\n      \n             </tab>\n          </tabset>\n     </div>\n  \n  </div>\n    </div>\n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/User';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n\n @Input() users: User;\n\n  constructor(private authServie: AuthServiceService, private userService: UserServiceService,\n  private alert : AlertifyService ) {\n\n    console.log('printed card' + this.users);\n\n  }\n\n  sendLike(id: number)\n  {\n    this.userService.sendLike(this.authServie.UserName.nameid, id).subscribe( data =>\n      {\n        this.alert.success('you have liked:' + this.users.knownAs);\n      }, err => {\n        this.alert.error(err);\n      });\n  }\n\n  ngOnInit() {\n    console.log('printed card oninit');\n\n  }\n\n}\n","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img class=\"card-img-top\" src=\"{{users.photoURL || '../../../../../../assets/user.png'}}\" alt=\"{{users.knownAs}}\" >\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/member/',users.id]\" ><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click)=\"sendLike(users.id)\" >\n        <i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" \n        [routerLink]=\"['/member/',users.id]\" [queryParams]=\"{tab: 3}\"><i class=\"fa fa-envelope\"></i></button></li>\n    </ul>\n  </div>\n\n<div class=\"card-body p-1\">\n<h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i> \n  {{users .knownAs}}  {{users.age}}\n</h6>\n<p class=\"card-text text-muted text-center\"> {{users.city}} </p>\n</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/User';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginationResult} from '../../_models/Pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n\n  users: User[];\n\n  user: User = JSON.parse(localStorage.getItem('user'));\n\n  // display gender into dropdown\n\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n\n  userParams: any = {};\n\n  pagination : Pagination; \n\n  constructor(private service: UserServiceService, private alertMsg: AlertifyService,\n    private route:ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.route.data.subscribe(data => {\n\n      this.users = data['users'].result;\n      \n\n      this.pagination = data['users'].pagination;\n\n      \n    });\n\n    this.userParams.gender = this.user.gender === 'male'? 'female': 'male';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  reset(){\n\n    this.userParams.gender = this.user.gender === 'male'? 'female': 'male';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loaduser();\n  }\n \n  pageChanged(event: any): void{\n    this.pagination.currentPage = event.page;\n\n   this.loaduser();\n\n  }\n\n  loaduser() {\n    this.service.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n    .subscribe((res: PaginationResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n\n\n    }, error => {\n      this.alertMsg.error(error);\n    });\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n  <form class=\"form-inline\" #form=\"ngForm\" (ngSubmit)=\"loaduser()\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"minAge\">Age From</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\"\n      [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"maxAge\">Age To</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\" \n      [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"gender\">Show: </label>\n      <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\"\n       [(ngModel)]=\"userParams.gender\" name=\"gender\">\n        <option *ngFor=\"let item of genderList\" [value]=\"item.value\">\n          {{ item.display}}\n        </option>\n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n    <button type=\"button\" class=\"btn btn-info\" (click)=\"reset();\" style=\"margin-left:10px\">Reset Filter</button>\n\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" \n        [(ngModel)]=\"userParams.orderBy\" (click)=\"loaduser();\" \n        value =\"lastActive\">Last Active</button>\n\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" \n        [(ngModel)]=\"userParams.orderBy\"  (click)=\"loaduser();\" \n        value =\"created\">Newest Members</button>\n      </div>\n    </div>\n  \n  </form>\n  <br>\n\n\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n       <app-member-card [users]=\"user\"> </app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n\n  <pagination [boundaryLinks]=\"true\" \n  [totalItems]=\"pagination.totalItems\"\n   [itemsPerPage]=\"pagination.itemsPerPage\"\n  [(ngModel)]=\"pagination.currentPage\"\n  (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n \n</pagination> \n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/Message';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { tap } from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'app-member-message',\n  templateUrl: './member-message.component.html',\n  styleUrls: ['./member-message.component.css']\n})\nexport class MemberMessageComponent implements OnInit {\n\n  @Input() recipientId: number;\n  messages: Message[];\n\n  newMessage: any = {};\n\n  constructor(private service: UserServiceService, private alertMsg: AlertifyService,\n    private authService: AuthServiceService ) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages()\n  {\n    const currentUserid = +this.authService.UserName.nameid;\n\n   this.service.getMessageThread(this.authService.UserName.nameid, this.recipientId)\n  .pipe( tap(message => {\n      for(let i=0;i< message.length; i++) {\n        if(message[i].isRead === false && message[i].recipientId === currentUserid){\n            this.service.MarkMessageAsRead(currentUserid, message[i].id);\n        }\n      }\n    })\n    )\n   .subscribe( messages => {\n      this.messages = messages;\n   }, err => {\n     this.alertMsg.error(err);\n   }); \n  }\n\n  sendMessage(){\n    this.newMessage.recipientId = this.recipientId;\n    this.service.sendMessage(this.authService.UserName.nameid,this.newMessage)\n      .subscribe( (message:Message) =>{\n        this.messages.unshift(message);\n        this.newMessage.content = '';\n\n      },err =>{\n        this.alertMsg.error(err);\n      });\n\n  }\n\n}\n"," <div class=\"card\"> \n   <div class=\"card-body\">\n      <div *ngIf=\"messages?.length === 0\">\n        <p> no Message Yet..</p>\n      </div>\n\n      <ul class=\"chat\">\n        <li *ngFor=\"let msg of messages\">\n          <div *ngIf=\"msg.senderId == recipientId\">\n            <span class=\"chat-img float-left\">\n              <img src=\"{{ msg.senderPhotoUrl }}\" alt=\"{{msg.senderKnownAs }}\"\n               class=\"rounded-circle\">\n            </span> \n            <div class=\"chat-body\">\n              <div class=\"header\">\n                <strong class=\"primary-font\">{{msg.senderKnownAs}}</strong>\n                <small class=\"text-muted float-right\">\n                  <span class=\"fa fa-clock-o\">{{ msg.messageSent | date:'short'}}</span>\n                </small>\n              </div>\n              <p>{{ msg.content}}</p> \n            </div>\n          </div>\n\n          \n\n          <div *ngIf=\"msg.senderId != recipientId\">\n            <span class=\"chat-img float-right\">\n              <img src=\"{{ msg.senderPhotoUrl }}\" alt=\"{{ msg.senderKnownAs }}\" class=\"rounded-circle\">\n            </span> \n            <div class=\"chat-body\">\n              <div class=\"header\">\n\n                <small class=\"text-muted float-right\">\n                  <span class=\"fa fa-clock-o\">{{ msg.messageSent | date:'shortDate'}}</span>\n                  <span  *ngIf=\"!msg.isRead\" class=\"text-danger\">(unread)</span>\n                  <span *ngIf=\"msg.isRead\" class=\"text-success\">(Read {{ msg.dateRead | date:'shortDate'}})</span>\n                </small>\n\n                <strong class=\"primary-font\">{{msg.senderKnownAs}}</strong>\n             \n              </div>\n              <p>{{ msg.content}}</p> \n            </div>\n          </div>\n\n        </li>\n      </ul>\n   </div>\n   <div class=\"card-footer\">\n     <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage();\">\n       <div class=\"input-group\">\n         <input type=\"text\" class=\"form-control input-sm\" [(ngModel)]=\"newMessage.content\"\n          name=\"content\" required\n          placeholder=\"send a private message\">\n          <div class=\"input-group-append\">\n            <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\">Send</button>\n          </div>\n       </div>\n     </form>\n   </div>\n </div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/_models/User';\nimport { TabsetComponent } from 'ngx-bootstrap';\n//import { NgxGalleryOptions, NgxGalleryImage } from 'ngx-gallery';\n\n@Component({\n  selector: 'app-memberdetail',\n  templateUrl: './memberdetail.component.html',\n  styleUrls: ['./memberdetail.component.css']\n})\nexport class MemberdetailComponent implements OnInit {\n\n  @ViewChild('memberTabs') memberTabs: TabsetComponent;\n  user: User;\n\n  //galleryOptions: NgxGalleryOptions[];\n    //galleryImages: NgxGalleryImage[];\n\n  constructor(private userservice: UserServiceService, private alert: AlertifyService,\n    private route: ActivatedRoute ) { }\n\n  ngOnInit() {\n\n    this.route.data.subscribe( data => {\n      this.user = data['user']\n    });\n\n    this.route.queryParams.subscribe(params => {\n\n      const selectedTab = params['tab'];\n\n       console.log('selectedTab --', selectedTab);\n\n      // this.memberTabs.tabs[selectedTab].active = true;\n\n      \n    });\n\n  }\n\n  getUserDetails(){\n    this.userservice.getUser(+this.route.snapshot.params['id']).subscribe((user: User) => {\n        this.user = user;\n        console.log(this.user);\n\n    }, err => {\n\n      this.alert.error(err);\n\n    });\n\n  }\n\n  selectTab(tabId: number){\n    console.log('test');\n\n  this.memberTabs.tabs[tabId].active = true;\n\n  }\n\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n     <h4>{{ user.knownAs}}'s Profile </h4> \n  </div>\n  <div class=\"row\">    \n<div class=\"col-sm-4\">\n   <div class=\"card\">\n     <img class=\"card-img-top img-thumbnail\" src=\"{{ user?.photoURL}}\" alt=\"{{ user?.knownAs }}\">\n      <div class=\"card-body\">\n          <div>\n            <strong>Location:</strong>\n            <p>{{user?.city}} , {{user?.country}}</p>\n          </div>\n          <div>\n            <strong>Age:</strong>\n            <p>{{ user?.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{ user?.lastActive }}</p>\n          </div>\n          <div>\n            <strong>Member since:</strong>\n            <p>{{ user?.createed }}</p>\n          </div>\n      </div>   \n      <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-primary w-100\">Like</button>\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\n          </div>\n      </div> \n   </div>\n</div>\n<div class=\"col-sm-8\">\n   <div class=\"tab-panel\">\n    <tabset class=\"member-tabset\" #memberTabs>\n      <tab heading=\"About {{user?.knownAs}}\">\n        <h4>Description</h4>\n        <p>{{user?.introduction}}</p>\n        <h4>Looking For</h4>\n        <p>{{user?.lookingFor}}</p>\n      </tab>\n\n      <tab heading=\"Interests\">\n        <h4>Interests</h4>\n        <p>{{user?.interest}}</p>\n       </tab>\n\n       <tab heading=\"Photo\">\n         <h4>photos will go..</h4>          \n        </tab>\n\n        <tab heading=\"Messages\">\n         <app-member-message [recipientId]=\"user.id\"></app-member-message>       \n        </tab>\n\n    </tabset>\n   </div>\n</div>\n  </div>\n</div>","import { Component, OnInit, Input, Output,EventEmitter } from '@angular/core';\nimport { photos } from 'src/app/_models/Photo';\nimport {NgStyle} from '@angular/common';\nimport { FileUploader } from 'ng2-file-upload';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\n\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\n\n\nexport class PhotoEditorComponent implements OnInit {\n\n  @Input() photos: photos[];\n  @Output() getMainPhotoChange = new EventEmitter<string>();\n\n  baseurl: 'http://localhost:5000/api/';\n\n  uploader: FileUploader;\n  hasBaseDropZoneOver: false;\n  response: string;\n  currentMain : photos;\n\n  constructor(private authservie: AuthServiceService, private userService: UserServiceService , private alert: AlertifyService ) {\n  }\n  ngOnInit() {\n    this.FileInitialize();\n  }\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  FileInitialize() {\n    this.uploader = new FileUploader({\n      url: 'http://localhost:5000/api/' + 'users/' + this.authservie.UserName.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType:['image'],\n      removeAfterUpload : true,\n      autoUpload : false,\n      maxFileSize : 10 * 1024 * 1024\n    });\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n\n      if (response){\n        console.log(\"success response\");\n        const res: photos = JSON.parse(response);\n        console.log(res);\n        const photo = {\n          id :  res.id,\n          url : res.url,\n          dateAdded : res.dateAdded,\n          description : res.description,\n          isMain : res.isMain\n        };\n        console.log(\"photoe edit : \"+ photo);\n        this.photos.push(photo);\n\n        if(photo.isMain){\n          this.authservie.changeMemberPhoto(photo.url);\n          this.authservie.CurrentUser.photoURL = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authservie.CurrentUser));\n        }\n      }\n\n    };\n  }\n\n  SetMainPhoto(photo: photos){\n    this.userService.setMainPhoto(this.authservie.UserName.nameid, photo.id).subscribe( () => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authservie.changeMemberPhoto(photo.url);\n      this.authservie.CurrentUser.photoURL = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authservie.CurrentUser));\n    }, (err) => {\n      this.alert.error(err);\n    });\n  }\n\n  DeletePhote(id: number) {\n    this.alert.confirm('Are you sure want to delete',() => {\n      this.userService.DeletePhoto(this.authservie.UserName.nameid,id).subscribe(\n        () => {this.photos.splice( this.photos.findIndex(x => x.id === id), 1);\n        this.alert.success('Successfully deleted');\n        }, err => {\n          this.alert.error('fail to delete');\n        });\n      });\n    }\n \n}\n","  <div class=\"row\">\n  <div  class=\"col-sm-2\"  *ngFor=\"let photo of photos\">\n    <img src=\"{{ photo.url || '../../../../../assets/user.png'}}\" class=\"img-thumbnail p-1\" alt=\"\">\n    <div class=\"text-center\">\n      <button type=\"button\" class=\"btn btn-sm mr-1\" (click)=\"SetMainPhoto(photo);\"\n      [ngClass]=\"photo.isMain?'btn-success active' : 'btn-secondary'\" [disabled]=\"photo.isMain\" >Main</button>\n      <button type=\"button\" class=\"btn btn-sm btn-danger\"\n      (click)=\"DeletePhote(photo.id)\" [disabled]=\"photo.isMain\"\n      ><i class=\"fa fa-trash-o\"></i></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-3\">\n\n      <h3>Add Photos</h3>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n           Drop Photo Here\n      </div>\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>             \n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 }} MB</td>              \n          </tr>\n          </tbody>\n      </table>\n\n      <div>\n          <div>\n              Queue progress:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload \n          </button>\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel \n          </button>\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash\"></span> Remove \n          </button>\n      </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { FormGroup,  FormBuilder, Validators } from '@angular/forms';\nimport { User } from 'src/app/_models/User';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-UserRegister',\n  templateUrl: './UserRegister.component.html',\n  styleUrls: ['./UserRegister.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n  //@Input() ValuesfromHome: any;\n  registerForm: FormGroup;\n\n  @Output() CancelRegister = new EventEmitter();\n\n  user: User;\n\n  constructor( private service: AuthServiceService, private alertify: AlertifyService, private route: Router,\n  private fb: FormBuilder ) { }\n\n  ngOnInit() {\n    console.log('start');\n  \n   this.CreateRegister();\n\n  }\n\n  // formLoad(){\n  //   this.fb.get('password').value =='';\n  //   g.get('userName').value =='';\n  //   g.get('confirmPassword').value =='';\n  // }\n\n  passwordMatch(g: FormGroup){\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\n  }\n\n  CreateRegister(){\n\n    this.registerForm = this.fb.group({\n     gender: ['male'],\n     userName: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      DOB : [null, Validators.required],\n      city : ['', Validators.required],\n      country : ['', Validators.required],\n     password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(9)]],\n     confirmPassword : ['', Validators.required]\n    }, this.passwordMatch);\n\n  }\n\n\n  Register() {\n    if (this.registerForm.valid)\n    {\n      console.log(this.user);\n      this.user = Object.assign({}, this.registerForm.value);\n      this.service.Register(this.user).subscribe( () => {\n\n        this.alertify.success(\"Register Successfully\");\n        \n      }, err => \n      { \n        this.alertify.error(err);\n      }, () => {\n        this.service.login(this.user).subscribe(() => {\n          this.route.navigate(['/member']);\n        });\n      });\n    }\n \n    console.log(this.registerForm.value);\n  }\n\n  Cancel() {\n    this.CancelRegister.emit(false);\n  }\n}\n","<form [formGroup]= \"registerForm\"  (ngSubmit)=\"Register()\">\n  <h2 class=\"text-center text-primary\">sign Up</h2>\n  <hr>\n\n   <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n    </label>\n  </div> \n\n  <div class=\"form-group\">\n    <input type=\"text\" [ngClass]=\"{'is-invalid': registerForm.get('userName').errors && \n    registerForm.get('userName').touched}\"\n    class=\"form-control \"  formControlName=\"userName\"  placeholder=\"user name\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('userName').touched && \n    registerForm.get('userName').hasError('required')\">userName is required</div>       \n  </div>\n \n\n  \n   <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n      placeholder=\"Known as\" formControlName=\"knownAs\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n  </div> \n\n   <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('DOB').errors && registerForm.get('DOB').touched}\" class=\"form-control\"\n      placeholder=\"Date of Birth\" formControlName=\"DOB\" type=\"date\" >\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('DOB').touched && registerForm.get('DOB').hasError('required')\">Date of Birth is required</div>\n  </div>\n\n   <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n      placeholder=\"City\" formControlName=\"city\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input  [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n      placeholder=\"Country\" formControlName=\"country\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n  </div> \n\n  <!-- <div class=\"form-group\">\n    <input type=\"text\"\n    class=\"form-control\"  formControlName=\"password\"  placeholder=\"password\">    \n  </div>\n  <div class=\"form-group\">\n    <input type=\"text\"\n    class=\"form-control\"  formControlName=\"confirmPassword\"  placeholder=\"confirm password\">    \n  </div> -->\n\n   <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\"\n    type=\"password\" class=\"form-control\"  formControlName=\"password\"  placeholder=\"Password\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').touched && registerForm.get('password').hasError('required')\">password is required</div> \n\n   \n\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('minlength') && \n    registerForm.get('password').touched\"> Password must be atleast 4 character..</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('maxlength') && \n    registerForm.get('confirmPassword').touched\"> Password can't exceed 8 character..</div>\n    </div> \n\n   <div class=\"form-group\">\n    <input  [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched\n        || registerForm.get('confirmPassword').touched && registerForm.hasError('misMatch')}\"\n    type=\"password\" class=\"form-control\"  formControlName=\"confirmPassword\"  placeholder=\"confirmPassword\">\n\n  \n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword').touched && \n    registerForm.get('confirmPassword').hasError('required')\">password is required</div>\n\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('mismatch') && \n    registerForm.get('confirmPassword').touched\"> Password must be match..</div>\n  </div> \n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" type=\"submit\">Register</button>\n    <button class=\"btn btn-default\" type=\"button\"(click)=\"Cancel()\">cancel</button>\n  </div>\n  \n</form>\n\n\n","\r\nimport {Routes } from '@angular/router';\r\nimport { HomeComponent } from './Home/Home.component';\r\nimport { MemberListComponent } from './Members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { AuthGuard } from './_guard/auth.guard';\r\nimport { MemberdetailComponent } from './Members/memberdetail/memberdetail.component';\r\nimport { memberdetailResolver } from './_resolvers/member-detail-resolver';\r\nimport { memberlistResolver } from './_resolvers/member-list-resolver';\r\nimport { MemberEditComponent } from './Members/member-edit/member-edit.component';\r\nimport { membereditResolver } from './_resolvers/member-edit-resolver';\r\nimport { preventUnsavedChanges } from './_guard/prevent-unsaved-changes-guard';\r\nimport { listResolver } from './_resolvers/list-resolver';\r\nimport { messagesResolver } from './_resolvers/messages.resolver';\r\n\r\n\r\nexport const Approute: Routes = [\r\n\r\n{ path: '', component: HomeComponent},\r\n\r\n{\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children:\r\n    [\r\n        { path: 'member', component: MemberListComponent, resolve: {users: memberlistResolver  } },\r\n        { path: 'member/:id', component: MemberdetailComponent, resolve: { user: memberdetailResolver  } },\r\n        { path: 'memberedit', component: MemberEditComponent,\r\n        resolve: { user: membereditResolver  } , canDeactivate: [preventUnsavedChanges] },\r\n        { path: 'message', component: MessagesComponent, resolve : { messages : messagesResolver} },\r\n        { path: 'list', component: ListComponent, resolve : { users : listResolver}}\r\n    ]\r\n},\r\n\r\n{ path: '**', redirectTo: '', pathMatch: 'full'}\r\n\r\n]","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from '../_models/User';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './Values.component.html',\n  styleUrls: ['./Values.component.css']\n})\nexport class ValuesComponent implements OnInit {\n\n  Value: any;\n\n\n  jwtHelper = new JwtHelperService();\n  constructor(private service: AuthServiceService ) {\n  }\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n\nif(token){\nthis.service.UserName = this.jwtHelper.decodeToken(token);\n }\n\n if(user){\n  this.service.CurrentUser = user;\n  this.service.changeMemberPhoto(user.photoURL);\n }\n\n  }\n\n \n\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate,  Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authservice: AuthServiceService,\n  private router: Router,\n  private alertify: AlertifyService){\n\n  }\n\n  canActivate(): boolean  {\n    if (this.authservice.loggedIn()) {\n        return true;\n    }\n\n    this.alertify.error('Please login');\n    this.router.navigate(['home']);\n    return false;\n  }\n}\n","import { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../Members/member-edit/member-edit.component';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class preventUnsavedChanges implements CanDeactivate<MemberEditComponent>{\r\n\r\n    canDeactivate(component: MemberEditComponent)\r\n    {\r\n        if(component.editForm.dirty){\r\n        return confirm('Are you sure want to continue? unsaved data will be lost.');\r\n        }\r\n        return true;\r\n    }\r\n}","export interface Pagination\r\n{\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n\r\n}\r\n\r\nexport class PaginationResult<T>\r\n{\r\n    result: T;\r\n    pagination : Pagination;\r\n}","import { Injectable } from '@angular/core'\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/User';\r\nimport { UserServiceService } from 'src/Services/UserService.service';\r\nimport { AlertifyService } from 'src/Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class listResolver implements Resolve<User[]> {\r\n\r\n    pageNumber = 1; \r\n    pageSize = 5; \r\n    likesParam = 'Likers';\r\n    constructor(private service: UserServiceService, private router: Router,\r\n        private alert: AlertifyService)\r\n        {\r\n\r\n        }\r\n\r\n        resolve(route: ActivatedRouteSnapshot): Observable<User[]>{\r\n            return this.service.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n                catchError( error => {\r\n                    this.alert.error('problem with retrieving data');\r\n                    this.router.navigate(['/home']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n}\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/User';\r\nimport { UserServiceService } from 'src/Services/UserService.service';\r\nimport { AlertifyService } from 'src/Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class memberdetailResolver implements Resolve<User> {\r\n\r\n    constructor(private service: UserServiceService, private router: Router,\r\n        private alert: AlertifyService)\r\n        {\r\n\r\n        }\r\n\r\n        resolve(route: ActivatedRouteSnapshot):Observable<User>{\r\n            return this.service.getUser(route.params['id']).pipe(\r\n                catchError( error => {\r\n                    this.alert.error('problem with nagivation');\r\n                    this.router.navigate(['/members']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/User';\r\nimport { UserServiceService } from 'src/Services/UserService.service';\r\nimport { AlertifyService } from 'src/Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthServiceService } from 'src/Services/Auth.service';\r\n\r\n@Injectable()\r\nexport class membereditResolver implements Resolve<User> {\r\n\r\n    constructor(private service: UserServiceService, private router: Router,\r\n        private alert: AlertifyService, private authservice: AuthServiceService)\r\n        {\r\n\r\n        }\r\n\r\n        resolve(route: ActivatedRouteSnapshot): Observable<User>{\r\n\r\n            return this.service.getUser(this.authservice.UserName.nameid).pipe(\r\n                catchError( error => {\r\n                    this.alert.error('problem with your data');\r\n                    this.router.navigate(['/members']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/User';\r\nimport { UserServiceService } from 'src/Services/UserService.service';\r\nimport { AlertifyService } from 'src/Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class memberlistResolver implements Resolve<User[]> {\r\n\r\n    pageNumber = 1; pageSize = 5;\r\n    \r\n    constructor(private service: UserServiceService, private router: Router,\r\n        private alert: AlertifyService)\r\n        {\r\n\r\n        }\r\n\r\n        resolve(route: ActivatedRouteSnapshot): Observable<User[]>{\r\n            return this.service.getUsers(this.pageNumber, this.pageSize).pipe(\r\n                catchError( error => {\r\n                    this.alert.error('problem with nagivation');\r\n                    this.router.navigate(['/home']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n}\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserServiceService } from 'src/Services/UserService.service';\r\nimport { AlertifyService } from 'src/Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/Message';\r\nimport { AuthServiceService } from 'src/Services/Auth.service';\r\n\r\n@Injectable()\r\nexport class messagesResolver implements Resolve<Message[]> {\r\n\r\n    pageNumber = 1; pageSize = 5;  messageContainer = 'Unread';\r\n    constructor(private service: UserServiceService, private router: Router,\r\n        private alert: AlertifyService, private authService: AuthServiceService)\r\n        {\r\n\r\n        }\r\n\r\n        resolve(route: ActivatedRouteSnapshot): Observable<Message[]>{\r\n            console.log('message resolver');\r\n            return this.service.getMessage(this.authService.UserName.nameid, this.pageNumber,\r\n                 this.pageSize, this.messageContainer ).pipe(\r\n                catchError( error => {\r\n                    this.alert.error('problem with Retrieving messages');\r\n                    this.router.navigate(['/home']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n}\r\n\r\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-second',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Dating App';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA    } from '@angular/core';\n\nimport { BsDropdownModule, TabsModule } from 'ngx-bootstrap';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ValuesComponent } from './Values/Values.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthServiceService } from '../Services/Auth.service';\nimport { UserRegisterComponent } from './Register/UserRegister/UserRegister.component';\nimport { HomeComponent } from './Home/Home.component';\nimport {  ErrorInterceptor } from 'src/Services/error.Interceptor';\nimport { Approute } from './Route';\nimport { MemberListComponent } from './Members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { MemberCardComponent } from './Members/member-list/member-card/member-card.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { MemberdetailComponent } from './Members/memberdetail/memberdetail.component';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AuthGuard } from './_guard/auth.guard';\nimport { memberdetailResolver } from './_resolvers/member-detail-resolver';\nimport { memberlistResolver } from './_resolvers/member-list-resolver';\nimport { MemberEditComponent } from './Members/member-edit/member-edit.component';\nimport { membereditResolver } from './_resolvers/member-edit-resolver';\nimport { preventUnsavedChanges } from './_guard/prevent-unsaved-changes-guard';\nimport { PhotoEditorComponent } from './Members/photo-editor/photo-editor.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { listResolver } from './_resolvers/list-resolver';\nimport { messagesResolver } from './_resolvers/messages.resolver';\nimport { ListComponent } from './list/list.component';\nimport { MemberTestComponent } from './Members/member-test/member-test.component';\nimport { MemberMessageComponent } from './Members/member-messages/member-message.component';\n//import {TimeAgoPipe} from 'time-ago-pipe';\n\n//import { NgxGalleryModule } from 'ngx-gallery';\n\nexport function tokenGetter(){\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      ValuesComponent,\n      NavComponent,\n      UserRegisterComponent,\n      HomeComponent,\n      MemberListComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberdetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      ListComponent,\n      MemberMessageComponent\n   ],\n   schemas: [\n      CUSTOM_ELEMENTS_SCHEMA\n  ],\n   imports: [\n      BrowserModule,\n      TabsModule.forRoot(),\n      PaginationModule.forRoot(),\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n  //    NgxGalleryModule,\n       FileUploadModule,\n      BsDropdownModule.forRoot(),\n       ButtonsModule.forRoot(),\n      RouterModule.forRoot(Approute),\n      JwtModule.forRoot({\n         config : {\n            tokenGetter: tokenGetter,\n            whitelistedDomains :['localhost:5000'],\n            blacklistedRoutes: ['localhost:5000/api/auth']\n         }\n      })\n   ],\n   // exports: [ ValuesComponent ],\n   providers: [\n      {\n         provide: HTTP_INTERCEPTORS,\n         useClass: ErrorInterceptor,\n         multi: true,\n       },\n       AuthServiceService,\n       ErrorInterceptor,\n       UserServiceService,\n       AuthGuard,\n       memberdetailResolver,\n       memberlistResolver,\n       membereditResolver,\n       preventUnsavedChanges,\n       listResolver,\n       messagesResolver\n   ],\n   bootstrap: [\n      ValuesComponent\n   ]\n\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { User } from '../_models/User';\nimport { Pagination, PaginationResult } from '../_models/Pagination';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n   users: User[];\n   pagination: Pagination;\n   likesParam = 'Likers';\n\n   \n\n  constructor(private authService: AuthServiceService, private userService: UserServiceService,\n    private route: ActivatedRoute, private alert : AlertifyService)\n    {\n\n    }\n\n  ngOnInit() {\n    this.route.data.subscribe( data => {\n\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n\n    });\n  }\n\n  pageChanged(event: any): void{\n    this.pagination.currentPage = event.page;\n   this.loaduser();\n\n  }\n\n  loaduser() {\n    console.log('start search likes' + this.likesParam);\n\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null,\n      this.likesParam)\n    .subscribe((res: PaginationResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n      console.log(this.users);\n        \n\n    }, error => {\n      this.alert.error(error);\n    });\n  }\n}\n\n\n","<div class=\"text-center mt-3\">\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : \n    {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n<div class=\"row\">\n  <div class=\"btn-group\">\n    <button class=\"btn btn-primary\"   [(ngModel)]=\"likesParam\" btnRadio=\"Likers\"\n    (click)=\"loaduser();\">Members who like me</button>\n\n    <button class=\"btn btn-primary\"   [(ngModel)]=\"likesParam\" btnRadio=\"Likees\"\n    (click)=\"loaduser();\">Members who I like</button>\n  </div> \n</div>\n\n<br>\n\n<div class=\"row\">\n  <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n       <app-member-card [users]=\"user\" > </app-member-card>      \n  </div>\n\n</div>\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n\n <pagination [boundaryLinks]=\"true\" \n  [totalItems]=\"pagination.totalItems\" \n   [itemsPerPage]=\"pagination.itemsPerPage\" \n  [(ngModel)]=\"pagination.currentPage\" \n  (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n  </pagination>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { Message } from '../_models/Message';\nimport { Pagination, PaginationResult } from '../_models/Pagination';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n messages: Message[] = [];\n trainers: any;\n pagination: Pagination;\n messageContainer = 'Unread';\n\n  constructor(private alertMsg: AlertifyService , private userService: UserServiceService,\n    private authservice: AuthServiceService, private route: ActivatedRoute) {\n\n    }\n\n  ngOnInit() {\n    console.log( 'start messages ');\n\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      console.log(\"messages.. \");\n      this.pagination = data['messages'].pagination;\n  });\n}\n\nloadMessages() {\n\n  console.log('Test loadMessage');\n\n  this.userService.getMessage(this.authservice.UserName.nameid, this.pagination.currentPage,\n    this.pagination.itemsPerPage, this.messageContainer)\n  .subscribe((res: PaginationResult<Message[]>) => {\n    this.messages = res.result;\n    this.pagination = res.pagination;\n  }, error => {\n    this.alertMsg.error(error);\n  });\n}\n\npageChanged(event: any): void {\n this.pagination.currentPage = event.page;\n this.loadMessages();\n}\n\ndeleteMessage(id: number){\n  this.alertMsg.confirm('Are you sure you want to delete this message',() =>{\n    this.userService.deleteMessage(id, this.authservice.UserName.nameid).subscribe( ()=>{\n      this.messages.splice(this.messages.findIndex(x=>x.id == id),1);\n      this.alertMsg.success('successfully delete');\n    }, err => {\n      this.alertMsg.error('Fail to delete');\n    })\n  });\n}\n\n}\n","<div class=\"container mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-primary\" \r\n        [(ngModel)]=\"messageContainer\" btnRadio=\"Unread\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-envelope\"></i> Unread\r\n        </button>\r\n        <button class=\"btn btn-primary\" \r\n        [(ngModel)]=\"messageContainer\" btnRadio=\"Inbox\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-envelope-open\"></i> Inbox\r\n        </button>\r\n        <button class=\"btn btn-primary\" \r\n        [(ngModel)]=\"messageContainer\" btnRadio=\"Outbox\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-paper-plane\"></i> Outbox\r\n        </button>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"row\" *ngIf=\"messages.length == 0\">\r\n      <h3>No messages</h3>\r\n    </div>\r\n  \r\n     <div class=\"row\" *ngIf=\"messages.length > 0\">\r\n            <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n        <tr>\r\n          <th style=\"width: 40%\">Message</th>\r\n          <th style=\"width: 20%\">From / To</th>\r\n          <th style=\"width: 20%\">Sent / Received</th>\r\n          <th style=\"width: 20%\"></th>\r\n        </tr>\r\n        <tr *ngFor=\"let message of messages\" [routerLink]=\"['/member', \r\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\" [queryParams]=\"{tab:3}\">\r\n          <td>{{message.content}}</td>\r\n          <td>\r\n            <div *ngIf=\"messageContainer != 'Outbox'\">\r\n                  <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\r\n                  <strong>{{message.senderKnownAs}}</strong>\r\n            </div>\r\n            <div *ngIf=\"messageContainer == 'Outbox'\">\r\n                  <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\r\n                  <strong>{{message.recipientKnownAs}}</strong>\r\n            </div>\r\n          </td>\r\n          <td>{{message.messageSent | date:'shortDate' }}</td>\r\n          <td>\r\n            <button class=\"btn btn-danger\" (click)=\"$event.stopPropagation();\" (click)=\"deleteMessage(message.id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n  \r\n    </div> \r\n  \r\n  </div>\r\n\r\n  <div class=\"d-flex justify-content-center\">\r\n\r\n      <pagination [boundaryLinks]=\"true\" \r\n                  [totalItems]=\"pagination.totalItems\"\r\n                  [itemsPerPage]=\"pagination.itemsPerPage\"\r\n                  [(ngModel)]=\"pagination.currentPage\"\r\n                  (pageChanged)=\"pageChanged($event)\"\r\n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\r\n    </pagination>\r\n\r\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from '../../Services/Auth.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport {  Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  model: any = {};\n  \n  photoUrl: string;\n\n  constructor(public service: AuthServiceService,\n    private alertify: AlertifyService,private routelink: Router) { }\n\n  ngOnInit() {\n    \n    this.service.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n  login(){\n    this.service.login(this.model).subscribe(res => {\n     this.alertify.success('Logged in successfully');\n    }, err => {\n      this.alertify.error(err);\n    },()=>{\n      this.routelink.navigate(['/member']);\n    });\n\n  }\n\n\n  loggedIn(){\n    return this.service.loggedIn();\n  }\n\n  Logout(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.service.UserName = null;\n    this.service.CurrentUser = null;\n\n    this.alertify.message('Logout successfully');\n    this.routelink.navigate(['/home']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\n  <div class=\"container\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Dating App</a>\n\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item routerLinkActive=\"active>\n        <a class=\"nav-link\" [routerLink]=\"['/member']\">Matches  <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\" >\n        <a class=\"nav-link\" [routerLink]=\"['/list']\">Lists</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\" >\n        <a class=\"nav-link\" [routerLink]=\"['/message']\">Message</a>\n      </li>           \n    </ul>\n\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n      <span class=\"mr-1\">\n        <img src=\"{{photoUrl || '../../../../assets/user.png'}}\" alt=\"\">\n      </span>\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\n       Welcome {{ service.UserName?.unique_name | titlecase }}\n      </a>\n\n      <div  class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" [routerLink]=\"['/memberedit']\"><i class=\"fa fa-user\"></i> Edit Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"Logout()\"><i class=\"fa fa-sign-out\"></i>Logout</a>\n      </div>\n    </div>\n\n    <form *ngIf=\"!loggedIn()\" #loginform=\"ngForm\" class=\"form-inline my-2 my-lg-0\" (ngSubmit)=\"login()\" >\n      <input class=\"form-control mr-sm-2\" type=\"text\" name=\"username\" placeholder=\"UserName\" required [(ngModel)]=model.username>\n      <input class=\"form-control mr-sm-2\" type=\"password\" name=\"Password\" placeholder=\"Password\" required [(ngModel)]=model.Password>\n      <button [disabled]=!loginform.valid class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form> \n  </div> \n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  ApiURL: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
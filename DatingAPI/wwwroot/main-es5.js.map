{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/Services/Auth.service.ts","webpack:///src/Services/UserService.service.ts","webpack:///src/Services/alertify.service.ts","webpack:///src/Services/error.Interceptor.ts","webpack:///src/app/Home/Home.component.ts","webpack:///src/app/Home/Home.component.html","webpack:///src/app/Members/member-edit/member-edit.component.ts","webpack:///src/app/Members/member-edit/member-edit.component.html","webpack:///src/app/Members/member-list/member-card/member-card.component.ts","webpack:///src/app/Members/member-list/member-card/member-card.component.html","webpack:///src/app/Members/member-list/member-list.component.ts","webpack:///src/app/Members/member-list/member-list.component.html","webpack:///src/app/Members/member-messages/member-message.component.ts","webpack:///src/app/Members/member-messages/member-message.component.html","webpack:///src/app/Members/memberdetail/memberdetail.component.ts","webpack:///src/app/Members/memberdetail/memberdetail.component.html","webpack:///src/app/Members/photo-editor/photo-editor.component.ts","webpack:///src/app/Members/photo-editor/photo-editor.component.html","webpack:///src/app/Register/UserRegister/UserRegister.component.ts","webpack:///src/app/Register/UserRegister/UserRegister.component.html","webpack:///src/app/Route.ts","webpack:///src/app/Values/Values.component.ts","webpack:///src/app/Values/Values.component.html","webpack:///src/app/_guard/auth.guard.ts","webpack:///src/app/_guard/prevent-unsaved-changes-guard.ts","webpack:///src/app/_models/Pagination.ts","webpack:///src/app/_resolvers/list-resolver.ts","webpack:///src/app/_resolvers/member-detail-resolver.ts","webpack:///src/app/_resolvers/member-edit-resolver.ts","webpack:///src/app/_resolvers/member-list-resolver.ts","webpack:///src/app/_resolvers/messages.resolver.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthServiceService","client","photoUrl","currentPhotoUrl","asObservable","jwtHelper","baseUrl","ApiURL","next","model","post","pipe","response","user","console","log","storeUserDetail_In_localStorage","changeMemberPhoto","CurrentUser","photoURL","current","localStorage","setItem","token","JSON","stringify","UserName","decodeToken","getItem","isTokenExpired","providedIn","UserServiceService","http","page","itemPerPage","userParams","likesParam","paginatedResult","params","append","minAge","maxAge","gender","orderBy","get","observe","res","result","body","headers","pagination","parse","put","userId","recipentId","messageContainer","recipientId","message","messageId","subscribe","AlertifyService","okCallback","ErrorInterceptor","handle","error","status","statusText","applicationError","serverError","modelStateError","errors","key","HomeComponent","RegisterMode","getclientRequest","values","err","value","selector","templateUrl","styleUrls","MemberEditComponent","route","alert","servive","authServie","$event","editForm","dirty","returnValue","data","updateUser","nameid","success","reset","Url","MemberCardComponent","userService","users","sendLike","knownAs","MemberListComponent","service","alertMsg","genderList","display","loaduser","event","currentPage","getUsers","itemsPerPage","pageChanged","MemberMessageComponent","authService","newMessage","loadMessages","currentUserid","getMessageThread","i","length","isRead","MarkMessageAsRead","messages","sendMessage","unshift","content","MemberdetailComponent","userservice","queryParams","selectedTab","getUser","snapshot","tabId","memberTabs","tabs","active","selectTab","uploader","PhotoEditorComponent","authservie","getMainPhotoChange","FileInitialize","hasBaseDropZoneOver","url","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","photo","dateAdded","description","isMain","photos","push","setMainPhoto","currentMain","filter","p","confirm","DeletePhoto","splice","findIndex","x","fileOverBase","UserRegisterComponent","alertify","fb","CancelRegister","CreateRegister","g","registerForm","group","userName","required","DOB","city","country","password","minLength","maxLength","confirmPassword","passwordMatch","valid","Object","assign","Register","login","navigate","emit","Cancel","Approute","path","component","runGuardsAndResolvers","canActivate","children","canDeactivate","redirectTo","pathMatch","ValuesComponent","AuthGuard","authservice","router","loggedIn","preventUnsavedChanges","PaginationResult","listResolver","pageNumber","pageSize","memberdetailResolver","membereditResolver","memberlistResolver","messagesResolver","getMessage","AppComponent","title","tokenGetter","AppModule","provide","useClass","multi","forRoot","config","whitelistedDomains","blacklistedRoutes","declarations","schemas","imports","providers","bootstrap","ListComponent","stopPropagation","MessagesComponent","deleteMessage","NavComponent","routelink","removeItem","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService} from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/_models/User';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n UserName: any;\n CurrentUser: User;\n photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n currentPhotoUrl = this.photoUrl.asObservable();\n \n jwtHelper = new JwtHelperService();\n\nprivate baseUrl = environment.ApiURL + 'auth/';\n\nconstructor(private client: HttpClient){\n}\n\nchangeMemberPhoto(photoUrl: string) {\n  this.photoUrl.next(photoUrl);\n}\n\nlogin(model: any){\n\n  return this.client.post(this.baseUrl + 'login', model).pipe(\n    map( (response: any) => {\n       const user = response;\n       console.log();\n       if (user) {\n        this.storeUserDetail_In_localStorage(user);\n        this.changeMemberPhoto(this.CurrentUser.photoURL);\n       }\n    })\n  );\n}\n\nstoreUserDetail_In_localStorage(current: any): void {\n\n  localStorage.setItem('token', current.token);\n  localStorage.setItem('user', JSON.stringify(current.user));\n  this.UserName = this.jwtHelper.decodeToken(current.token);\n  this.CurrentUser = current.user;\n\n}\n\nRegister(model : User){\n  return this.client.post(this.baseUrl+'Register', model);\n}\n\nloggedIn() {\n  var token = localStorage.getItem('token');\n   return !this.jwtHelper.isTokenExpired(token);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/_models/User';\nimport { PaginationResult } from 'src/app/_models/Pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from 'src/app/_models/Message';\n\n// const httpOptions = {\n//  headers : new HttpHeaders({\n//    'Authorization': 'Bearer ' + localStorage.getItem('token')\n//  })\n// };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n\n  baseUrl = environment.ApiURL;\n\nconstructor(private http: HttpClient) { }\n\ngetUsers(page?, itemPerPage?, userParams?, likesParam?): Observable<PaginationResult<User[]>>{\n\n  const paginatedResult: PaginationResult<User[]> = new PaginationResult<User[]>();\n\n  let params = new HttpParams();\n \n  if(page != null && itemPerPage != null){\n    params = params.append('pageNumber', page);\n    params = params.append('pageSize', itemPerPage);\n  }\n\n  if(userParams != null)\n  {\n    params = params.append('minAge', userParams.minAge);\n    params = params.append('maxAge', userParams.maxAge);\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n  }\n\n  console.log('Test likesParam', likesParam);\n\n  if(likesParam === 'Likers')\n  {\n    params = params.append('Likers', 'true');\n  }\n\n  if(likesParam === 'Likees')\n  {\n    params = params.append('Likees', 'true');\n  }\n\n  return this.http.get<User[]>(this.baseUrl + 'Users/GetUsers', {observe: 'response', params})\n    .pipe( map( res => {\n      paginatedResult.result = res.body;\n      if(res.headers.get('Pagination') != null) {\n        console.log('inside pagination');\n        paginatedResult.pagination = JSON.parse(res.headers.get('Pagination'))\n        console.log('inside after pagination', paginatedResult.pagination);\n      }\n      console.log('fnsh  paginatedResult', paginatedResult);\n      return paginatedResult;\n    })\n  );\n}\n\nupdateUser(id: number, user: User){\n\n  return this.http.put<User>(this.baseUrl + 'Users/updateUser?id=' + id, user);\n}\n\n\ngetUser(id): Observable<User>{\n\n  return this.http.get<User>(this.baseUrl + 'Users/getUserbyID/' + id);\n}\n\nDeletePhoto(userId: number, id: number)\n{\n return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id );\n}\n\nsetMainPhoto(userId: number, id: number) \n{\n  return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain',{});\n}\n\nsendLike(id: number, recipentId: number) \n{\n  return this.http.post(this.baseUrl + 'users/LikeUser/' + id + '/like/' + recipentId,{});\n}\n\ngetMessage(id: number, page?, itemPerPage?, messageContainer?)\n{\n  console.log('user service msg st');\n  const paginatedResult: PaginationResult<Message[]> = new PaginationResult<Message[]>();\n\n  let params = new HttpParams();\n\n  params = params.append('messageContainer', messageContainer);\n\n  if(page != null && itemPerPage != null){\n    params = params.append('pageNumber', page);\n    params = params.append('pageSize', itemPerPage);\n  }\n\n  return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/message',{ observe:'response' , params })\n   .pipe( map( res => {\n     paginatedResult.result = res.body;\n\n     if(res.headers.get('Pagination') != null){\n      paginatedResult.pagination = JSON.parse(res.headers.get('Pagination'));\n      console.log('user service msg result' , paginatedResult.pagination);\n     }\n     return paginatedResult;\n   })\n   );\n}\n\ngetMessageThread(id: number,recipientId: number){\n\n  return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/Message/threads/' + recipientId);\n}\n\nsendMessage(id: number, message: Message){\n  return this.http.post(this.baseUrl + 'users/' + id + '/Message', message);\n}\n\ndeleteMessage(id: number, userId: number){\n  return this.http.post(this.baseUrl + 'users/' + userId + '/Message/' + id,{});\n\n}\n\nMarkMessageAsRead(userId: number, messageId: number){\n  return this.http.post(this.baseUrl + 'users/' + userId + '/Message/' + messageId + '/read',{})\n  .subscribe();\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\nconfirm(message: string, okCallback: () => any){\n  alertify.confirm(message,(e: any) => {\n  if (e) {\n    okCallback();\n  }\n  });\n}\n\nsuccess(message: string){\n  alertify.success(message);\n}\n\nerror(message: string){\n  alertify.error(message);\n}\n\nwarning(message: string){\n  alertify.warning(message);\n}\n\nmessage(message: string){\n  alertify.message(message);\n}\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(\r\n    req: import('@angular/common/http').HttpRequest<any>,\r\n    next: import('@angular/common/http').HttpHandler):\r\n    import('rxjs').Observable<import('@angular/common/http').HttpEvent<any>> {\r\n        console.log('Inter');\r\n\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n\r\n                if (error.status === 401){\r\n                    return throwError(error.statusText);\r\n                }\r\n\r\n                if (error instanceof HttpResponse){\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if (applicationError) {\r\n                      return throwError(applicationError);\r\n                    }\r\n                }\r\n\r\n                const serverError = error.error;\r\n                let modelStateError = '';\r\n\r\n                if (serverError.errors && typeof serverError.errors === 'object'){\r\n                    for (const key in serverError.errors) {\r\n                        if (serverError.errors[key]) {\r\n                         modelStateError += serverError.errors[key] + '\\n';\r\n                        }\r\n                    }\r\n                }\r\n                return throwError(modelStateError ||  serverError || 'Server Error');\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n","import { Component, OnInit, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-Home',\n  templateUrl: './Home.component.html',\n  styleUrls: ['./Home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  RegisterMode = false;\n  values: any;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    console.log('home');\n    this.getclientRequest();\n  }\n\n  getclientRequest(){\n    this.http.get('http://localhost:5000/api/Values/GetTest').subscribe(res => {\n      this.values = res;\n      console.log(this.values);\n\n    }, err => {\n      console.log(err);\n    });\n  }\n  Register(){\n    this.RegisterMode = true;\n  }\n\n  RegisterCancel(value: boolean){\n    this.RegisterMode = value;\n  }\n\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!RegisterMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches.. All you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"Register()\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div  *ngIf=\"RegisterMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">        \n        <app-UserRegister  (CancelRegister)=\"RegisterCancel($event)\"></app-UserRegister>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/_models/User';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AuthServiceService } from 'src/Services/Auth.service';\n\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n\n  @ViewChild('editform') editForm: NgForm;\n\n  photoUrl: string;\n\n  @HostListener('window:beforeunload', ['$event'])\n\n  unloadNotification($event: any) {\n    if(this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  user: User;\n\n  constructor(private route: ActivatedRoute, private alert: AlertifyService,\n    private servive: UserServiceService, private authServie: AuthServiceService ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe( data => {\n      this.user = data['user'];\n    });\n    \n    this.authServie.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n\n  updateUser()\n  {\n    this.servive.updateUser(this.authServie.UserName.nameid, this.user).subscribe(\n      next => {\n        this.alert.success('successfully saved');\n        this.editForm.reset(this.user);\n      }, err => {\n        console.log(this.user);\n        this.alert.error(err);\n      }\n    );\n  }\n\n  updateMain(Url){\n    console.log(Url);\n   this.user.photoURL= Url;\n  }\n}\n","<div class=\"container mt-4\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <h3>your profile</h3>\n        </div>\n        <div class=\"col-sm-8\">\n            <div *ngIf=\"editform.dirty\" class=\"alert alert-info\">\n            <strong>Information </strong> you have made changes.. Any unsaved changes will be lost.!\n            </div>\n        </div>        \n    </div>\n    <div class=\"row\">\n  <div class=\"col-sm-4\">\n     <div class=\"card\">\n       <img class=\"card-img-top img-thumbnail\" src=\"{{ photoUrl || '../../../../../assets/user.png'}}\" alt=\"{{ user?.knownAs }}\">\n        <div class=\"card-body\">\n            <div>\n              <strong>Location:</strong>\n              <p>{{user.city}} , {{user.country}}</p>\n            </div>\n            <div>\n              <strong>Age:</strong>\n              <p>{{ user.age}}</p>\n            </div>\n            <div>\n              <strong>Last Active:</strong>\n              <p>{{ user.lastActive }}</p>\n            </div>\n            <div>\n              <strong>Member since:</strong>\n              <p>{{ user.createed }}</p>\n            </div>\n        </div>   \n        <div class=\"card-footer\">           \n              <button [disabled]=\"!editform.dirty\"  form=\"editform\" class=\"btn btn-success btn-block\">Save changes</button>          \n        </div> \n     </div>\n  </div>\n  <div class=\"col-sm-8\">\n     <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\">\n            <tab heading=\"Edit profile\">\n             <form #editform=\"ngForm\" id=\"editform\" (ngSubmit)=\"updateUser();\">\n               <h4>Description</h4>\n            <textarea name=\"introduction\" rows=\"5\" class=\"form-control\" \n            [(ngModel)]=\"user.introduction\"></textarea>       \n      \n               <h4>Looking For</h4>\n               <textarea name=\"lookingFor\" rows=\"5\" class=\"form-control\" \n            [(ngModel)]=\"user.lookingFor\"></textarea>  \n      \n            <h4>Interest</h4>\n               <textarea name=\"interest\" rows=\"5\" class=\"form-control\" \n            [(ngModel)]=\"user.interest\"></textarea>  \n      \n            <h4>Location Details:</h4>\n            <div class=\"form-inline\">\n               <label for=\"city\">city</label>\n               <input class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"user.city\">\n      \n               <label for=\"country\">country</label>\n               <input class=\"form-control\" type=\"text\" name=\"country\" [(ngModel)]=\"user.country\">\n            </div>\n             </form>\n            </tab>\n            <tab heading=\"Edit Photos\">\n              <app-photo-editor [photos]=\"user.photos\"></app-photo-editor>    \n              <!--  -->\n              <!-- (getMainPhotoChange)=\"updateMain($event) -->\n      \n             </tab>\n          </tabset>\n     </div>\n  \n  </div>\n    </div>\n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/User';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n\n @Input() users: User;\n\n  constructor(private authServie: AuthServiceService, private userService: UserServiceService,\n  private alert : AlertifyService ) {\n\n    console.log('printed card' + this.users);\n\n  }\n\n  sendLike(id: number)\n  {\n    this.userService.sendLike(this.authServie.UserName.nameid, id).subscribe( data =>\n      {\n        this.alert.success('you have liked:' + this.users.knownAs);\n      }, err => {\n        this.alert.error(err);\n      });\n  }\n\n  ngOnInit() {\n    console.log('printed card oninit');\n\n  }\n\n}\n","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img class=\"card-img-top\" src=\"{{users.photoURL || '../../../../../../assets/user.png'}}\" alt=\"{{users.knownAs}}\" >\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/member/',users.id]\" ><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click)=\"sendLike(users.id)\" >\n        <i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" \n        [routerLink]=\"['/member/',users.id]\" [queryParams]=\"{tab: 3}\"><i class=\"fa fa-envelope\"></i></button></li>\n    </ul>\n  </div>\n\n<div class=\"card-body p-1\">\n<h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i> \n  {{users .knownAs}}  {{users.age}}\n</h6>\n<p class=\"card-text text-muted text-center\"> {{users.city}} </p>\n</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/User';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginationResult} from '../../_models/Pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n\n  users: User[];\n\n  user: User = JSON.parse(localStorage.getItem('user'));\n\n  // display gender into dropdown\n\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n\n  userParams: any = {};\n\n  pagination : Pagination; \n\n  constructor(private service: UserServiceService, private alertMsg: AlertifyService,\n    private route:ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.route.data.subscribe(data => {\n\n      this.users = data['users'].result;\n      \n\n      this.pagination = data['users'].pagination;\n\n      \n    });\n\n    this.userParams.gender = this.user.gender === 'male'? 'female': 'male';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  reset(){\n\n    this.userParams.gender = this.user.gender === 'male'? 'female': 'male';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loaduser();\n  }\n \n  pageChanged(event: any): void{\n    this.pagination.currentPage = event.page;\n\n   this.loaduser();\n\n  }\n\n  loaduser() {\n    this.service.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n    .subscribe((res: PaginationResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n\n\n    }, error => {\n      this.alertMsg.error(error);\n    });\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n  <form class=\"form-inline\" #form=\"ngForm\" (ngSubmit)=\"loaduser()\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"minAge\">Age From</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\"\n      [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"maxAge\">Age To</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\" \n      [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n    </div>\n  \n    <div class=\"form-group px-2\">\n      <label for=\"gender\">Show: </label>\n      <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\"\n       [(ngModel)]=\"userParams.gender\" name=\"gender\">\n        <option *ngFor=\"let item of genderList\" [value]=\"item.value\">\n          {{ item.display}}\n        </option>\n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n    <button type=\"button\" class=\"btn btn-info\" (click)=\"reset();\" style=\"margin-left:10px\">Reset Filter</button>\n\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" \n        [(ngModel)]=\"userParams.orderBy\" (click)=\"loaduser();\" \n        value =\"lastActive\">Last Active</button>\n\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" \n        [(ngModel)]=\"userParams.orderBy\"  (click)=\"loaduser();\" \n        value =\"created\">Newest Members</button>\n      </div>\n    </div>\n  \n  </form>\n  <br>\n\n\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n       <app-member-card [users]=\"user\"> </app-member-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n\n  <pagination [boundaryLinks]=\"true\" \n  [totalItems]=\"pagination.totalItems\"\n   [itemsPerPage]=\"pagination.itemsPerPage\"\n  [(ngModel)]=\"pagination.currentPage\"\n  (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n \n</pagination> \n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/Message';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { tap } from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'app-member-message',\n  templateUrl: './member-message.component.html',\n  styleUrls: ['./member-message.component.css']\n})\nexport class MemberMessageComponent implements OnInit {\n\n  @Input() recipientId: number;\n  messages: Message[];\n\n  newMessage: any = {};\n\n  constructor(private service: UserServiceService, private alertMsg: AlertifyService,\n    private authService: AuthServiceService ) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages()\n  {\n    const currentUserid = +this.authService.UserName.nameid;\n\n   this.service.getMessageThread(this.authService.UserName.nameid, this.recipientId)\n  .pipe( tap(message => {\n      for(let i=0;i< message.length; i++) {\n        if(message[i].isRead === false && message[i].recipientId === currentUserid){\n            this.service.MarkMessageAsRead(currentUserid, message[i].id);\n        }\n      }\n    })\n    )\n   .subscribe( messages => {\n      this.messages = messages;\n   }, err => {\n     this.alertMsg.error(err);\n   }); \n  }\n\n  sendMessage(){\n    this.newMessage.recipientId = this.recipientId;\n    this.service.sendMessage(this.authService.UserName.nameid,this.newMessage)\n      .subscribe( (message:Message) =>{\n        this.messages.unshift(message);\n        this.newMessage.content = '';\n\n      },err =>{\n        this.alertMsg.error(err);\n      });\n\n  }\n\n}\n"," <div class=\"card\"> \n   <div class=\"card-body\">\n      <div *ngIf=\"messages?.length === 0\">\n        <p> no Message Yet..</p>\n      </div>\n\n      <ul class=\"chat\">\n        <li *ngFor=\"let msg of messages\">\n          <div *ngIf=\"msg.senderId == recipientId\">\n            <span class=\"chat-img float-left\">\n              <img src=\"{{ msg.senderPhotoUrl }}\" alt=\"{{msg.senderKnownAs }}\"\n               class=\"rounded-circle\">\n            </span> \n            <div class=\"chat-body\">\n              <div class=\"header\">\n                <strong class=\"primary-font\">{{msg.senderKnownAs}}</strong>\n                <small class=\"text-muted float-right\">\n                  <span class=\"fa fa-clock-o\">{{ msg.messageSent | date:'short'}}</span>\n                </small>\n              </div>\n              <p>{{ msg.content}}</p> \n            </div>\n          </div>\n\n          \n\n          <div *ngIf=\"msg.senderId != recipientId\">\n            <span class=\"chat-img float-right\">\n              <img src=\"{{ msg.senderPhotoUrl }}\" alt=\"{{ msg.senderKnownAs }}\" class=\"rounded-circle\">\n            </span> \n            <div class=\"chat-body\">\n              <div class=\"header\">\n\n                <small class=\"text-muted float-right\">\n                  <span class=\"fa fa-clock-o\">{{ msg.messageSent | date:'shortDate'}}</span>\n                  <span  *ngIf=\"!msg.isRead\" class=\"text-danger\">(unread)</span>\n                  <span *ngIf=\"msg.isRead\" class=\"text-success\">(Read {{ msg.dateRead | date:'shortDate'}})</span>\n                </small>\n\n                <strong class=\"primary-font\">{{msg.senderKnownAs}}</strong>\n             \n              </div>\n              <p>{{ msg.content}}</p> \n            </div>\n          </div>\n\n        </li>\n      </ul>\n   </div>\n   <div class=\"card-footer\">\n     <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage();\">\n       <div class=\"input-group\">\n         <input type=\"text\" class=\"form-control input-sm\" [(ngModel)]=\"newMessage.content\"\n          name=\"content\" required\n          placeholder=\"send a private message\">\n          <div class=\"input-group-append\">\n            <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\">Send</button>\n          </div>\n       </div>\n     </form>\n   </div>\n </div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/_models/User';\nimport { TabsetComponent } from 'ngx-bootstrap';\n//import { NgxGalleryOptions, NgxGalleryImage } from 'ngx-gallery';\n\n@Component({\n  selector: 'app-memberdetail',\n  templateUrl: './memberdetail.component.html',\n  styleUrls: ['./memberdetail.component.css']\n})\nexport class MemberdetailComponent implements OnInit {\n\n  @ViewChild('memberTabs') memberTabs: TabsetComponent;\n  user: User;\n\n  //galleryOptions: NgxGalleryOptions[];\n    //galleryImages: NgxGalleryImage[];\n\n  constructor(private userservice: UserServiceService, private alert: AlertifyService,\n    private route: ActivatedRoute ) { }\n\n  ngOnInit() {\n\n    this.route.data.subscribe( data => {\n      this.user = data['user']\n    });\n\n    this.route.queryParams.subscribe(params => {\n\n      const selectedTab = params['tab'];\n\n       console.log('selectedTab --', selectedTab);\n\n      // this.memberTabs.tabs[selectedTab].active = true;\n\n      \n    });\n\n  }\n\n  getUserDetails(){\n    this.userservice.getUser(+this.route.snapshot.params['id']).subscribe((user: User) => {\n        this.user = user;\n        console.log(this.user);\n\n    }, err => {\n\n      this.alert.error(err);\n\n    });\n\n  }\n\n  selectTab(tabId: number){\n    console.log('test');\n\n  this.memberTabs.tabs[tabId].active = true;\n\n  }\n\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n     <h4>{{ user.knownAs}}'s Profile </h4> \n  </div>\n  <div class=\"row\">    \n<div class=\"col-sm-4\">\n   <div class=\"card\">\n     <img class=\"card-img-top img-thumbnail\" src=\"{{ user?.photoURL}}\" alt=\"{{ user?.knownAs }}\">\n      <div class=\"card-body\">\n          <div>\n            <strong>Location:</strong>\n            <p>{{user?.city}} , {{user?.country}}</p>\n          </div>\n          <div>\n            <strong>Age:</strong>\n            <p>{{ user?.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active:</strong>\n            <p>{{ user?.lastActive }}</p>\n          </div>\n          <div>\n            <strong>Member since:</strong>\n            <p>{{ user?.createed }}</p>\n          </div>\n      </div>   \n      <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-primary w-100\">Like</button>\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\n          </div>\n      </div> \n   </div>\n</div>\n<div class=\"col-sm-8\">\n   <div class=\"tab-panel\">\n    <tabset class=\"member-tabset\" #memberTabs>\n      <tab heading=\"About {{user?.knownAs}}\">\n        <h4>Description</h4>\n        <p>{{user?.introduction}}</p>\n        <h4>Looking For</h4>\n        <p>{{user?.lookingFor}}</p>\n      </tab>\n\n      <tab heading=\"Interests\">\n        <h4>Interests</h4>\n        <p>{{user?.interest}}</p>\n       </tab>\n\n       <tab heading=\"Photo\">\n         <h4>photos will go..</h4>          \n        </tab>\n\n        <tab heading=\"Messages\">\n         <app-member-message [recipientId]=\"user.id\"></app-member-message>       \n        </tab>\n\n    </tabset>\n   </div>\n</div>\n  </div>\n</div>","import { Component, OnInit, Input, Output,EventEmitter } from '@angular/core';\nimport { photos } from 'src/app/_models/Photo';\nimport {NgStyle} from '@angular/common';\nimport { FileUploader } from 'ng2-file-upload';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\n\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\n\n\nexport class PhotoEditorComponent implements OnInit {\n\n  @Input() photos: photos[];\n  @Output() getMainPhotoChange = new EventEmitter<string>();\n\n  baseurl: 'http://localhost:5000/api/';\n\n  uploader: FileUploader;\n  hasBaseDropZoneOver: false;\n  response: string;\n  currentMain : photos;\n\n  constructor(private authservie: AuthServiceService, private userService: UserServiceService , private alert: AlertifyService ) {\n  }\n  ngOnInit() {\n    this.FileInitialize();\n  }\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  FileInitialize() {\n    this.uploader = new FileUploader({\n      url: 'http://localhost:5000/api/' + 'users/' + this.authservie.UserName.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType:['image'],\n      removeAfterUpload : true,\n      autoUpload : false,\n      maxFileSize : 10 * 1024 * 1024\n    });\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n\n      if (response){\n        console.log(\"success response\");\n        const res: photos = JSON.parse(response);\n        console.log(res);\n        const photo = {\n          id :  res.id,\n          url : res.url,\n          dateAdded : res.dateAdded,\n          description : res.description,\n          isMain : res.isMain\n        };\n        console.log(\"photoe edit : \"+ photo);\n        this.photos.push(photo);\n\n        if(photo.isMain){\n          this.authservie.changeMemberPhoto(photo.url);\n          this.authservie.CurrentUser.photoURL = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authservie.CurrentUser));\n        }\n      }\n\n    };\n  }\n\n  SetMainPhoto(photo: photos){\n    this.userService.setMainPhoto(this.authservie.UserName.nameid, photo.id).subscribe( () => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authservie.changeMemberPhoto(photo.url);\n      this.authservie.CurrentUser.photoURL = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authservie.CurrentUser));\n    }, (err) => {\n      this.alert.error(err);\n    });\n  }\n\n  DeletePhote(id: number) {\n    this.alert.confirm('Are you sure want to delete',() => {\n      this.userService.DeletePhoto(this.authservie.UserName.nameid,id).subscribe(\n        () => {this.photos.splice( this.photos.findIndex(x => x.id === id), 1);\n        this.alert.success('Successfully deleted');\n        }, err => {\n          this.alert.error('fail to delete');\n        });\n      });\n    }\n \n}\n","  <div class=\"row\">\n  <div  class=\"col-sm-2\"  *ngFor=\"let photo of photos\">\n    <img src=\"{{ photo.url || '../../../../../assets/user.png'}}\" class=\"img-thumbnail p-1\" alt=\"\">\n    <div class=\"text-center\">\n      <button type=\"button\" class=\"btn btn-sm mr-1\" (click)=\"SetMainPhoto(photo);\"\n      [ngClass]=\"photo.isMain?'btn-success active' : 'btn-secondary'\" [disabled]=\"photo.isMain\" >Main</button>\n      <button type=\"button\" class=\"btn btn-sm btn-danger\"\n      (click)=\"DeletePhote(photo.id)\" [disabled]=\"photo.isMain\"\n      ><i class=\"fa fa-trash-o\"></i></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-3\">\n\n      <h3>Add Photos</h3>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n           Drop Photo Here\n      </div>\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>             \n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 }} MB</td>              \n          </tr>\n          </tbody>\n      </table>\n\n      <div>\n          <div>\n              Queue progress:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload \n          </button>\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel \n          </button>\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash\"></span> Remove \n          </button>\n      </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { FormGroup,  FormBuilder, Validators } from '@angular/forms';\nimport { User } from 'src/app/_models/User';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-UserRegister',\n  templateUrl: './UserRegister.component.html',\n  styleUrls: ['./UserRegister.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n  //@Input() ValuesfromHome: any;\n  registerForm: FormGroup;\n\n  @Output() CancelRegister = new EventEmitter();\n\n  user: User;\n\n  constructor( private service: AuthServiceService, private alertify: AlertifyService, private route: Router,\n  private fb: FormBuilder ) { }\n\n  ngOnInit() {\n    console.log('start');\n  \n   this.CreateRegister();\n\n  }\n\n  // formLoad(){\n  //   this.fb.get('password').value =='';\n  //   g.get('userName').value =='';\n  //   g.get('confirmPassword').value =='';\n  // }\n\n  passwordMatch(g: FormGroup){\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\n  }\n\n  CreateRegister(){\n\n    this.registerForm = this.fb.group({\n     gender: ['male'],\n     userName: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      DOB : [null, Validators.required],\n      city : ['', Validators.required],\n      country : ['', Validators.required],\n     password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(9)]],\n     confirmPassword : ['', Validators.required]\n    }, this.passwordMatch);\n\n  }\n\n\n  Register() {\n    if (this.registerForm.valid)\n    {\n      console.log(this.user);\n      this.user = Object.assign({}, this.registerForm.value);\n      this.service.Register(this.user).subscribe( () => {\n\n        this.alertify.success(\"Register Successfully\");\n        \n      }, err => \n      { \n        this.alertify.error(err);\n      }, () => {\n        this.service.login(this.user).subscribe(() => {\n          this.route.navigate(['/member']);\n        });\n      });\n    }\n \n    console.log(this.registerForm.value);\n  }\n\n  Cancel() {\n    this.CancelRegister.emit(false);\n  }\n}\n","<form [formGroup]= \"registerForm\"  (ngSubmit)=\"Register()\">\n  <h2 class=\"text-center text-primary\">sign Up</h2>\n  <hr>\n\n   <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n    </label>\n  </div> \n\n  <div class=\"form-group\">\n    <input type=\"text\" [ngClass]=\"{'is-invalid': registerForm.get('userName').errors && \n    registerForm.get('userName').touched}\"\n    class=\"form-control \"  formControlName=\"userName\"  placeholder=\"user name\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('userName').touched && \n    registerForm.get('userName').hasError('required')\">userName is required</div>       \n  </div>\n \n\n  \n   <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n      placeholder=\"Known as\" formControlName=\"knownAs\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n  </div> \n\n   <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('DOB').errors && registerForm.get('DOB').touched}\" class=\"form-control\"\n      placeholder=\"Date of Birth\" formControlName=\"DOB\" type=\"date\" >\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('DOB').touched && registerForm.get('DOB').hasError('required')\">Date of Birth is required</div>\n  </div>\n\n   <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n      placeholder=\"City\" formControlName=\"city\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input  [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n      placeholder=\"Country\" formControlName=\"country\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n  </div> \n\n  <!-- <div class=\"form-group\">\n    <input type=\"text\"\n    class=\"form-control\"  formControlName=\"password\"  placeholder=\"password\">    \n  </div>\n  <div class=\"form-group\">\n    <input type=\"text\"\n    class=\"form-control\"  formControlName=\"confirmPassword\"  placeholder=\"confirm password\">    \n  </div> -->\n\n   <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\"\n    type=\"password\" class=\"form-control\"  formControlName=\"password\"  placeholder=\"Password\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').touched && registerForm.get('password').hasError('required')\">password is required</div> \n\n   \n\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('minlength') && \n    registerForm.get('password').touched\"> Password must be atleast 4 character..</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('maxlength') && \n    registerForm.get('confirmPassword').touched\"> Password can't exceed 8 character..</div>\n    </div> \n\n   <div class=\"form-group\">\n    <input  [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched\n        || registerForm.get('confirmPassword').touched && registerForm.hasError('misMatch')}\"\n    type=\"password\" class=\"form-control\"  formControlName=\"confirmPassword\"  placeholder=\"confirmPassword\">\n\n  \n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword').touched && \n    registerForm.get('confirmPassword').hasError('required')\">password is required</div>\n\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('mismatch') && \n    registerForm.get('confirmPassword').touched\"> Password must be match..</div>\n  </div> \n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" type=\"submit\">Register</button>\n    <button class=\"btn btn-default\" type=\"button\"(click)=\"Cancel()\">cancel</button>\n  </div>\n  \n</form>\n\n\n","\r\nimport {Routes } from '@angular/router';\r\nimport { HomeComponent } from './Home/Home.component';\r\nimport { MemberListComponent } from './Members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { AuthGuard } from './_guard/auth.guard';\r\nimport { MemberdetailComponent } from './Members/memberdetail/memberdetail.component';\r\nimport { memberdetailResolver } from './_resolvers/member-detail-resolver';\r\nimport { memberlistResolver } from './_resolvers/member-list-resolver';\r\nimport { MemberEditComponent } from './Members/member-edit/member-edit.component';\r\nimport { membereditResolver } from './_resolvers/member-edit-resolver';\r\nimport { preventUnsavedChanges } from './_guard/prevent-unsaved-changes-guard';\r\nimport { listResolver } from './_resolvers/list-resolver';\r\nimport { messagesResolver } from './_resolvers/messages.resolver';\r\n\r\n\r\nexport const Approute: Routes = [\r\n\r\n{ path: '', component: HomeComponent},\r\n\r\n{\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children:\r\n    [\r\n        { path: 'member', component: MemberListComponent, resolve: {users: memberlistResolver  } },\r\n        { path: 'member/:id', component: MemberdetailComponent, resolve: { user: memberdetailResolver  } },\r\n        { path: 'memberedit', component: MemberEditComponent,\r\n        resolve: { user: membereditResolver  } , canDeactivate: [preventUnsavedChanges] },\r\n        { path: 'message', component: MessagesComponent, resolve : { messages : messagesResolver} },\r\n        { path: 'list', component: ListComponent, resolve : { users : listResolver}}\r\n    ]\r\n},\r\n\r\n{ path: '**', redirectTo: '', pathMatch: 'full'}\r\n\r\n]","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from '../_models/User';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './Values.component.html',\n  styleUrls: ['./Values.component.css']\n})\nexport class ValuesComponent implements OnInit {\n\n  Value: any;\n\n\n  jwtHelper = new JwtHelperService();\n  constructor(private service: AuthServiceService ) {\n  }\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n\nif(token){\nthis.service.UserName = this.jwtHelper.decodeToken(token);\n }\n\n if(user){\n  this.service.CurrentUser = user;\n  this.service.changeMemberPhoto(user.photoURL);\n }\n\n  }\n\n \n\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate,  Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authservice: AuthServiceService,\n  private router: Router,\n  private alertify: AlertifyService){\n\n  }\n\n  canActivate(): boolean  {\n    if (this.authservice.loggedIn()) {\n        return true;\n    }\n\n    this.alertify.error('Please login');\n    this.router.navigate(['home']);\n    return false;\n  }\n}\n","import { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../Members/member-edit/member-edit.component';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class preventUnsavedChanges implements CanDeactivate<MemberEditComponent>{\r\n\r\n    canDeactivate(component: MemberEditComponent)\r\n    {\r\n        if(component.editForm.dirty){\r\n        return confirm('Are you sure want to continue? unsaved data will be lost.');\r\n        }\r\n        return true;\r\n    }\r\n}","export interface Pagination\r\n{\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n\r\n}\r\n\r\nexport class PaginationResult<T>\r\n{\r\n    result: T;\r\n    pagination : Pagination;\r\n}","import { Injectable } from '@angular/core'\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/User';\r\nimport { UserServiceService } from 'src/Services/UserService.service';\r\nimport { AlertifyService } from 'src/Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class listResolver implements Resolve<User[]> {\r\n\r\n    pageNumber = 1; \r\n    pageSize = 5; \r\n    likesParam = 'Likers';\r\n    constructor(private service: UserServiceService, private router: Router,\r\n        private alert: AlertifyService)\r\n        {\r\n\r\n        }\r\n\r\n        resolve(route: ActivatedRouteSnapshot): Observable<User[]>{\r\n            return this.service.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n                catchError( error => {\r\n                    this.alert.error('problem with retrieving data');\r\n                    this.router.navigate(['/home']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n}\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/User';\r\nimport { UserServiceService } from 'src/Services/UserService.service';\r\nimport { AlertifyService } from 'src/Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class memberdetailResolver implements Resolve<User> {\r\n\r\n    constructor(private service: UserServiceService, private router: Router,\r\n        private alert: AlertifyService)\r\n        {\r\n\r\n        }\r\n\r\n        resolve(route: ActivatedRouteSnapshot):Observable<User>{\r\n            return this.service.getUser(route.params['id']).pipe(\r\n                catchError( error => {\r\n                    this.alert.error('problem with nagivation');\r\n                    this.router.navigate(['/members']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/User';\r\nimport { UserServiceService } from 'src/Services/UserService.service';\r\nimport { AlertifyService } from 'src/Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthServiceService } from 'src/Services/Auth.service';\r\n\r\n@Injectable()\r\nexport class membereditResolver implements Resolve<User> {\r\n\r\n    constructor(private service: UserServiceService, private router: Router,\r\n        private alert: AlertifyService, private authservice: AuthServiceService)\r\n        {\r\n\r\n        }\r\n\r\n        resolve(route: ActivatedRouteSnapshot): Observable<User>{\r\n\r\n            return this.service.getUser(this.authservice.UserName.nameid).pipe(\r\n                catchError( error => {\r\n                    this.alert.error('problem with your data');\r\n                    this.router.navigate(['/members']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/User';\r\nimport { UserServiceService } from 'src/Services/UserService.service';\r\nimport { AlertifyService } from 'src/Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class memberlistResolver implements Resolve<User[]> {\r\n\r\n    pageNumber = 1; pageSize = 5;\r\n    \r\n    constructor(private service: UserServiceService, private router: Router,\r\n        private alert: AlertifyService)\r\n        {\r\n\r\n        }\r\n\r\n        resolve(route: ActivatedRouteSnapshot): Observable<User[]>{\r\n            return this.service.getUsers(this.pageNumber, this.pageSize).pipe(\r\n                catchError( error => {\r\n                    this.alert.error('problem with nagivation');\r\n                    this.router.navigate(['/home']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n}\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserServiceService } from 'src/Services/UserService.service';\r\nimport { AlertifyService } from 'src/Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/Message';\r\nimport { AuthServiceService } from 'src/Services/Auth.service';\r\n\r\n@Injectable()\r\nexport class messagesResolver implements Resolve<Message[]> {\r\n\r\n    pageNumber = 1; pageSize = 5;  messageContainer = 'Unread';\r\n    constructor(private service: UserServiceService, private router: Router,\r\n        private alert: AlertifyService, private authService: AuthServiceService)\r\n        {\r\n\r\n        }\r\n\r\n        resolve(route: ActivatedRouteSnapshot): Observable<Message[]>{\r\n            console.log('message resolver');\r\n            return this.service.getMessage(this.authService.UserName.nameid, this.pageNumber,\r\n                 this.pageSize, this.messageContainer ).pipe(\r\n                catchError( error => {\r\n                    this.alert.error('problem with Retrieving messages');\r\n                    this.router.navigate(['/home']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n}\r\n\r\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-second',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Dating App';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA    } from '@angular/core';\n\nimport { BsDropdownModule, TabsModule } from 'ngx-bootstrap';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ValuesComponent } from './Values/Values.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthServiceService } from '../Services/Auth.service';\nimport { UserRegisterComponent } from './Register/UserRegister/UserRegister.component';\nimport { HomeComponent } from './Home/Home.component';\nimport {  ErrorInterceptor } from 'src/Services/error.Interceptor';\nimport { Approute } from './Route';\nimport { MemberListComponent } from './Members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { MemberCardComponent } from './Members/member-list/member-card/member-card.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { MemberdetailComponent } from './Members/memberdetail/memberdetail.component';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AuthGuard } from './_guard/auth.guard';\nimport { memberdetailResolver } from './_resolvers/member-detail-resolver';\nimport { memberlistResolver } from './_resolvers/member-list-resolver';\nimport { MemberEditComponent } from './Members/member-edit/member-edit.component';\nimport { membereditResolver } from './_resolvers/member-edit-resolver';\nimport { preventUnsavedChanges } from './_guard/prevent-unsaved-changes-guard';\nimport { PhotoEditorComponent } from './Members/photo-editor/photo-editor.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { listResolver } from './_resolvers/list-resolver';\nimport { messagesResolver } from './_resolvers/messages.resolver';\nimport { ListComponent } from './list/list.component';\nimport { MemberTestComponent } from './Members/member-test/member-test.component';\nimport { MemberMessageComponent } from './Members/member-messages/member-message.component';\n//import {TimeAgoPipe} from 'time-ago-pipe';\n\n//import { NgxGalleryModule } from 'ngx-gallery';\n\nexport function tokenGetter(){\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      ValuesComponent,\n      NavComponent,\n      UserRegisterComponent,\n      HomeComponent,\n      MemberListComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberdetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      ListComponent,\n      MemberMessageComponent\n   ],\n   schemas: [\n      CUSTOM_ELEMENTS_SCHEMA\n  ],\n   imports: [\n      BrowserModule,\n      TabsModule.forRoot(),\n      PaginationModule.forRoot(),\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n  //    NgxGalleryModule,\n       FileUploadModule,\n      BsDropdownModule.forRoot(),\n       ButtonsModule.forRoot(),\n      RouterModule.forRoot(Approute),\n      JwtModule.forRoot({\n         config : {\n            tokenGetter: tokenGetter,\n            whitelistedDomains :['localhost:5000'],\n            blacklistedRoutes: ['localhost:5000/api/auth']\n         }\n      })\n   ],\n   // exports: [ ValuesComponent ],\n   providers: [\n      {\n         provide: HTTP_INTERCEPTORS,\n         useClass: ErrorInterceptor,\n         multi: true,\n       },\n       AuthServiceService,\n       ErrorInterceptor,\n       UserServiceService,\n       AuthGuard,\n       memberdetailResolver,\n       memberlistResolver,\n       membereditResolver,\n       preventUnsavedChanges,\n       listResolver,\n       messagesResolver\n   ],\n   bootstrap: [\n      ValuesComponent\n   ]\n\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { User } from '../_models/User';\nimport { Pagination, PaginationResult } from '../_models/Pagination';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n   users: User[];\n   pagination: Pagination;\n   likesParam = 'Likers';\n\n   \n\n  constructor(private authService: AuthServiceService, private userService: UserServiceService,\n    private route: ActivatedRoute, private alert : AlertifyService)\n    {\n\n    }\n\n  ngOnInit() {\n    this.route.data.subscribe( data => {\n\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n\n    });\n  }\n\n  pageChanged(event: any): void{\n    this.pagination.currentPage = event.page;\n   this.loaduser();\n\n  }\n\n  loaduser() {\n    console.log('start search likes' + this.likesParam);\n\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null,\n      this.likesParam)\n    .subscribe((res: PaginationResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n      console.log(this.users);\n        \n\n    }, error => {\n      this.alert.error(error);\n    });\n  }\n}\n\n\n","<div class=\"text-center mt-3\">\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : \n    {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n<div class=\"row\">\n  <div class=\"btn-group\">\n    <button class=\"btn btn-primary\"   [(ngModel)]=\"likesParam\" btnRadio=\"Likers\"\n    (click)=\"loaduser();\">Members who like me</button>\n\n    <button class=\"btn btn-primary\"   [(ngModel)]=\"likesParam\" btnRadio=\"Likees\"\n    (click)=\"loaduser();\">Members who I like</button>\n  </div> \n</div>\n\n<br>\n\n<div class=\"row\">\n  <div *ngFor=\"let user of users\" class=\"col-sm-6 col-md-4 col-lg-4 col-xl-2\">\n       <app-member-card [users]=\"user\" > </app-member-card>      \n  </div>\n\n</div>\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n\n <pagination [boundaryLinks]=\"true\" \n  [totalItems]=\"pagination.totalItems\" \n   [itemsPerPage]=\"pagination.itemsPerPage\" \n  [(ngModel)]=\"pagination.currentPage\" \n  (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n  </pagination>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from 'src/Services/UserService.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport { Message } from '../_models/Message';\nimport { Pagination, PaginationResult } from '../_models/Pagination';\nimport { AuthServiceService } from 'src/Services/Auth.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n messages: Message[] = [];\n trainers: any;\n pagination: Pagination;\n messageContainer = 'Unread';\n\n  constructor(private alertMsg: AlertifyService , private userService: UserServiceService,\n    private authservice: AuthServiceService, private route: ActivatedRoute) {\n\n    }\n\n  ngOnInit() {\n    console.log( 'start messages ');\n\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      console.log(\"messages.. \");\n      this.pagination = data['messages'].pagination;\n  });\n}\n\nloadMessages() {\n\n  console.log('Test loadMessage');\n\n  this.userService.getMessage(this.authservice.UserName.nameid, this.pagination.currentPage,\n    this.pagination.itemsPerPage, this.messageContainer)\n  .subscribe((res: PaginationResult<Message[]>) => {\n    this.messages = res.result;\n    this.pagination = res.pagination;\n  }, error => {\n    this.alertMsg.error(error);\n  });\n}\n\npageChanged(event: any): void {\n this.pagination.currentPage = event.page;\n this.loadMessages();\n}\n\ndeleteMessage(id: number){\n  this.alertMsg.confirm('Are you sure you want to delete this message',() =>{\n    this.userService.deleteMessage(id, this.authservice.UserName.nameid).subscribe( ()=>{\n      this.messages.splice(this.messages.findIndex(x=>x.id == id),1);\n      this.alertMsg.success('successfully delete');\n    }, err => {\n      this.alertMsg.error('Fail to delete');\n    })\n  });\n}\n\n}\n","<div class=\"container mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-primary\" \r\n        [(ngModel)]=\"messageContainer\" btnRadio=\"Unread\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-envelope\"></i> Unread\r\n        </button>\r\n        <button class=\"btn btn-primary\" \r\n        [(ngModel)]=\"messageContainer\" btnRadio=\"Inbox\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-envelope-open\"></i> Inbox\r\n        </button>\r\n        <button class=\"btn btn-primary\" \r\n        [(ngModel)]=\"messageContainer\" btnRadio=\"Outbox\" (click)=\"loadMessages()\">\r\n          <i class=\"fa fa-paper-plane\"></i> Outbox\r\n        </button>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"row\" *ngIf=\"messages.length == 0\">\r\n      <h3>No messages</h3>\r\n    </div>\r\n  \r\n     <div class=\"row\" *ngIf=\"messages.length > 0\">\r\n            <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n        <tr>\r\n          <th style=\"width: 40%\">Message</th>\r\n          <th style=\"width: 20%\">From / To</th>\r\n          <th style=\"width: 20%\">Sent / Received</th>\r\n          <th style=\"width: 20%\"></th>\r\n        </tr>\r\n        <tr *ngFor=\"let message of messages\" [routerLink]=\"['/member', \r\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\" [queryParams]=\"{tab:3}\">\r\n          <td>{{message.content}}</td>\r\n          <td>\r\n            <div *ngIf=\"messageContainer != 'Outbox'\">\r\n                  <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\r\n                  <strong>{{message.senderKnownAs}}</strong>\r\n            </div>\r\n            <div *ngIf=\"messageContainer == 'Outbox'\">\r\n                  <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle mr-1\">\r\n                  <strong>{{message.recipientKnownAs}}</strong>\r\n            </div>\r\n          </td>\r\n          <td>{{message.messageSent | date:'shortDate' }}</td>\r\n          <td>\r\n            <button class=\"btn btn-danger\" (click)=\"$event.stopPropagation();\" (click)=\"deleteMessage(message.id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n  \r\n    </div> \r\n  \r\n  </div>\r\n\r\n  <div class=\"d-flex justify-content-center\">\r\n\r\n      <pagination [boundaryLinks]=\"true\" \r\n                  [totalItems]=\"pagination.totalItems\"\r\n                  [itemsPerPage]=\"pagination.itemsPerPage\"\r\n                  [(ngModel)]=\"pagination.currentPage\"\r\n                  (pageChanged)=\"pageChanged($event)\"\r\n                previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\r\n    </pagination>\r\n\r\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from '../../Services/Auth.service';\nimport { AlertifyService } from 'src/Services/alertify.service';\nimport {  Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  model: any = {};\n  \n  photoUrl: string;\n\n  constructor(public service: AuthServiceService,\n    private alertify: AlertifyService,private routelink: Router) { }\n\n  ngOnInit() {\n    \n    this.service.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n  login(){\n    this.service.login(this.model).subscribe(res => {\n     this.alertify.success('Logged in successfully');\n    }, err => {\n      this.alertify.error(err);\n    },()=>{\n      this.routelink.navigate(['/member']);\n    });\n\n  }\n\n\n  loggedIn(){\n    return this.service.loggedIn();\n  }\n\n  Logout(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.service.UserName = null;\n    this.service.CurrentUser = null;\n\n    this.alertify.message('Logout successfully');\n    this.routelink.navigate(['/home']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\n  <div class=\"container\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Dating App</a>\n\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item routerLinkActive=\"active>\n        <a class=\"nav-link\" [routerLink]=\"['/member']\">Matches  <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\" >\n        <a class=\"nav-link\" [routerLink]=\"['/list']\">Lists</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\" >\n        <a class=\"nav-link\" [routerLink]=\"['/message']\">Message</a>\n      </li>           \n    </ul>\n\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n      <span class=\"mr-1\">\n        <img src=\"{{photoUrl || '../../../../assets/user.png'}}\" alt=\"\">\n      </span>\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\n       Welcome {{ service.UserName?.unique_name | titlecase }}\n      </a>\n\n      <div  class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" [routerLink]=\"['/memberedit']\"><i class=\"fa fa-user\"></i> Edit Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"Logout()\"><i class=\"fa fa-sign-out\"></i>Logout</a>\n      </div>\n    </div>\n\n    <form *ngIf=\"!loggedIn()\" #loginform=\"ngForm\" class=\"form-inline my-2 my-lg-0\" (ngSubmit)=\"login()\" >\n      <input class=\"form-control mr-sm-2\" type=\"text\" name=\"username\" placeholder=\"UserName\" required [(ngModel)]=model.username>\n      <input class=\"form-control mr-sm-2\" type=\"password\" name=\"Password\" placeholder=\"Password\" required [(ngModel)]=model.Password>\n      <button [disabled]=!loginform.valid class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form> \n  </div> \n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  ApiURL: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}